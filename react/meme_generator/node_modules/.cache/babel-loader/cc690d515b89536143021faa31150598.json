{"ast":null,"code":"var _jsxFileName = \"/Users/oppilas/Desktop/portfolio/TrainingGround/react/meme_generator/src/MemeGenerator.js\";\nimport React, { Component } from \"react\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflop.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const memes = response.data.memes;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const _even$target = even.target,\n          name = _even$target.name,\n          value = _even$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"meme-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      placeholde: \"Top Text\",\n      value: this.state.topText,\n      onchange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomText\",\n      placeholde: \"BottomText Text\",\n      value: this.state.bottomText,\n      onchange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Generate\")));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/oppilas/Desktop/portfolio/TrainingGround/react/meme_generator/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","componentDidMount","fetch","then","response","json","memes","data","setState","handleChange","event","even","target","name","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,+BAHF;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AAAA,YACNE,KADM,GACIF,QAAQ,CAACG,IADb,CACND,KADM;AAEd,WAAKE,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAEM;AAAf,OAAd;AACH,KALL;AAMH;;AAEDG,EAAAA,YAAY,CAAEC,KAAF,EAAS;AAAA,yBACKC,IAAI,CAACC,MADV;AAAA,UACVC,IADU,gBACVA,IADU;AAAA,UACJC,KADI,gBACJA,KADI;AAEjB,SAAKN,QAAL,CAAc;AAAE,OAACK,IAAD,GAAQC;AAAV,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,UAAU,EAAC,UAHf;AAII,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,OAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKY,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,YAFT;AAGI,MAAA,UAAU,EAAC,iBAHf;AAII,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,UAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKW,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAeI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,CADJ,CADJ;AAqBH;;AA/CiC;;AAkDtC,eAAef,aAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass MemeGenerator extends Component {\n    constructor() {\n        super();\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflop.com/1bij.jpg\",\n            allMemeImgs: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const { memes } = response.data;\n                this.setState({ allMemeImgs: memes });\n            })\n    }\n\n    handleChange (event) {\n        const {name, value} = even.target;\n        this.setState({ [name]: value })\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"meme-form\">\n                    <input\n                        type=\"text\"\n                        name=\"topText\"\n                        placeholde=\"Top Text\"\n                        value={this.state.topText}\n                        onchange={this.handleChange}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"bottomText\"\n                        placeholde=\"BottomText Text\"\n                        value={this.state.bottomText}\n                        onchange={this.handleChange}\n                    />\n                    <button type=\"button\">Generate</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator;"]},"metadata":{},"sourceType":"module"}